/**
 * Copyright Kyndryl, Inc. 2022
 */
 
@import '../variables/config';
@import '../variables/grid';
@import './units';

/// Adds the appropriate padding according to the sub-grid units.
///
/// @param {Keyword|Number} $side... - The direction the padding should go. (top, right, bottom, left)
/// @param {Keyword|Number} $amount - The number of sub-grid units.
/// @param {Keyword|Number} $unit - The number of pixels per sub-grid unit.
///
/// @output Adds the appropriate padding in rems.
@mixin padding($side, $amount, $unit: $grid-sub-px) {
  @each $s in $side {
    @if $s == 'top' or $s == 'right' or $s == 'bottom' or $s == 'left' {
      padding-#{$s}: #{px2rem($amount * $unit)};
    } @else {
      @warn 'padding(): "#{$s}" is not a supported side.';
    }
  }
}

/// Generates classes for setting padding around elements.
///
/// @param {Keyword|Number} $n - The number of classes to generate.
///
/// @output Creates $n classes for setting padding.
@mixin create-padding-classes($n: 8) {
  @for $i from 0 through $n {
    .#{$prefix-class}-pt#{$i} {
      @include padding(top, $i);
    }
    .#{$prefix-class}-pr#{$i} {
      @include padding(right, $i);
    }
    .#{$prefix-class}-pb#{$i} {
      @include padding(bottom, $i);
    }
    .#{$prefix-class}-pl#{$i} {
      @include padding(left, $i);
    }
  }
}

@include create-padding-classes();

/// Adds the appropriate margin according to the sub-grid units.
///
/// @param {Keyword|Number} $side... - The direction the margin should go. (top, right, bottom, left)
/// @param {Keyword|Number} $amount - The number of sub-grid units.
/// @param {Keyword|Number} $unit - The number of pixels per sub-grid unit.
///
/// @output Adds the appropriate margins in rems.
@mixin margin($side, $amount, $unit: $grid-sub-px) {
  @each $s in $side {
    @if $s == 'top' or $s == 'right' or $s == 'bottom' or $s == 'left' {
      margin-#{$s}: #{px2rem($amount * $unit)};
    } @else {
      @warn 'margin(): "#{$s}" is not a supported side.';
    }
  }
}

/// Generates classes for setting margins around elements.
///
/// @param {Keyword|Number} $n - The number of classes to generate.
///
/// @output Creates $n classes for setting margins.
@mixin create-margin-classes($n: 8) {
  @for $i from 0 through $n {
    .#{$prefix-class}-mt#{$i} {
      @include margin(top, $i);
    }
    .#{$prefix-class}-mr#{$i} {
      @include margin(right, $i);
    }
    .#{$prefix-class}-mb#{$i} {
      @include margin(bottom, $i);
    }
    .#{$prefix-class}-ml#{$i} {
      @include margin(left, $i);
    }
  }
}

@include create-margin-classes();
